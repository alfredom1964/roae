{"version":3,"sources":["webpack:///src/app/pages/reporte/reporte.page.scss","webpack:///src/app/pages/reporte/reporte.module.ts","webpack:///src/app/pages/reporte/reporte-routing.module.ts","webpack:///src/app/pages/reporte/reporte.page.ts","webpack:///src/app/pages/reporte/reporte.page.html"],"names":["ReportePageModule","imports","declarations","exports","providers","routes","path","component","ReportePageRoutingModule","forChild","ReportePage","activatedRoute","authService","geolocation","formBuilder","nativeGeocoder","router","sms","network","data","currDate","currTime","values","geoencoderOptions","useLocale","maxResults","reporteId","snapshot","paramMap","get","preguntas$","getReportDetail","reportes$","getReports","Date","toLocaleString","username$","getUsername","getGeolocation","startClock","subscription","pipe","preguntas","usuario","subscribe","preguntasObject","forEach","pregunta","index","tipo_pregunta_id","id","required","ionicForm","group","unsubscribe","console","log","value","postReporte","form","coords","lat","lng","getCurrentPosition","then","resp","latitude","longitude","accuracy","getGeoencoder","error","alert","JSON","stringify","reverseGeocode","result","selector","template"],"mappings":"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","file":"pages-reporte-reporte-module-es5.js","sourcesContent":["export default \"ion-item {\\n  width: 100%;\\n}\\n\\nion-input {\\n  text-align: right;\\n}\\n\\nion-text {\\n  display: flex;\\n  align-items: center;\\n  width: 100%;\\n  height: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxyZXBvcnRlLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFdBQUE7QUFDSjs7QUFFQTtFQUNJLGlCQUFBO0FBQ0o7O0FBRUE7RUFDSSxhQUFBO0VBQ0EsbUJBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtBQUNKIiwiZmlsZSI6InJlcG9ydGUucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWl0ZW0ge1xuICAgIHdpZHRoOiAxMDAlO1xufVxuXG5pb24taW5wdXQge1xuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG5pb24tdGV4dCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbn0iXX0= */\";","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { IonicModule } from \"@ionic/angular\";\n\nimport { ReportePageRoutingModule } from \"./reporte-routing.module\";\n\nimport { ReportePage } from \"./reporte.page\";\nimport { Network } from \"@ionic-native/network/ngx\";\nimport { Storage } from \"@ionic/storage\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    ReportePageRoutingModule,\n  ],\n  declarations: [ReportePage],\n  exports: [FormsModule, ReactiveFormsModule],\n  providers: [Storage, Network],\n})\nexport class ReportePageModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ReportePage } from './reporte.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ReportePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ReportePageRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './../../services/auth.service';\nimport { merge, Observable, Subscription, timer } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport {\n  NativeGeocoder,\n  NativeGeocoderOptions,\n  NativeGeocoderResult,\n} from '@ionic-native/native-geocoder/ngx';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { formatDate } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ThrowStmt } from '@angular/compiler';\nimport { mergeMap } from 'rxjs/operators';\nimport { SMS } from '@ionic-native/sms/ngx';\nimport { NetworkService } from '../../services/network.service';\n\n@Component({\n  selector: 'app-reporte',\n  templateUrl: './reporte.page.html',\n  styleUrls: ['./reporte.page.scss'],\n})\nexport class ReportePage implements OnInit {\n  ionicForm: FormGroup;\n  data = '';\n  reporteId: string;\n  preguntas$: Observable<Array<any>>;\n  reportes$: Observable<Array<any>>;\n  currDate = '';\n  currTime = '';\n  username$: Promise<any>;\n  values = [];\n  subscription: Subscription;\n\n\n  // Location coordinates\n  lat: number;\n  lng: number;\n  accuracy: number;\n  locale: string;\n\n  // Telefono SMS\n // telefono: number;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private authService: AuthService,\n    // private toastController: ToastController,\n    private geolocation: Geolocation,\n    public formBuilder: FormBuilder,\n    private nativeGeocoder: NativeGeocoder,\n    private router: Router,\n    private sms: SMS,\n    private network: NetworkService\n  ) {}\n\n  ngOnInit() {\n    this.reporteId = this.activatedRoute.snapshot.paramMap.get('id');\n    this.preguntas$ = this.authService.getReportDetail(this.reporteId);\n    this.reportes$ = this.authService.getReports();\n    this.currDate = new Date().toLocaleString();\n    this.username$ = this.authService.getUsername();\n    this.getGeolocation();\n    this.startClock();\n    this.subscription = this.preguntas$\n      .pipe(\n        mergeMap(async (preguntas) => {\n          const usuario = await this.username$;\n          return {\n            preguntas,\n            usuario,\n          };\n        })\n      )\n      .subscribe(({ preguntas, usuario }) => {\n        const preguntasObject = {};\n        preguntas.forEach((pregunta, index) => {\n          // Si es 1 le ponemos la hora por valor de defecto\n          if (pregunta.tipo_pregunta_id === '1') {\n            preguntasObject[pregunta.id] = [this.currDate]; \n          } \n          else if (pregunta.tipo_pregunta_id === '3') {\n            preguntasObject[pregunta.id] = ['', [Validators.required]];\n          } else {\n            preguntasObject[pregunta.id] = [false];\n          }\n          // Le ponemos de una vez a la de id uno el valor del usuario, igual no lo puede cambiar\n          if (pregunta.id === '1') {\n            preguntasObject[pregunta.id] = [usuario];\n          }\n          \n        });\n        this.ionicForm = this.formBuilder.group(preguntasObject);\n      });\n   \n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  startClock() {\n    timer(0, 1000).subscribe(() => {\n      this.currDate = new Date().toLocaleString();\n    });\n  }\n\n\n  submitForm() {console.log(this.ionicForm.value);\n    this.authService\n      .postReporte({\n        form: this.ionicForm.value,\n        coords: { lat: this.lat, lng: this.lng },\n        reporteId: this.reporteId,\n      })\n      .subscribe();\n  }\n\n  //Geocoder configuration\n  geoencoderOptions: NativeGeocoderOptions = {\n    useLocale: true,\n    maxResults: 5,\n  };\n\n  //Get current coordinates of device\n  getGeolocation() {\n    this.geolocation\n      .getCurrentPosition()\n      .then((resp) => {\n        this.lat = resp.coords.latitude;\n        this.lng = resp.coords.longitude;\n        this.accuracy = resp.coords.accuracy;\n\n        this.getGeoencoder(resp.coords.latitude, resp.coords.longitude);\n      })\n      .catch((error) => {\n        alert('Error getting location' + JSON.stringify(error));\n      });\n  }\n\n  //geocoder method to fetch address from coordinates passed as arguments\n  getGeoencoder(latitude, longitude) {\n    this.nativeGeocoder\n      .reverseGeocode(latitude, longitude, this.geoencoderOptions)\n      .then((result: NativeGeocoderResult[]) => {\n        console.log(result[0]);\n      })\n      .catch((error: any) => {\n        alert('Error getting location' + JSON.stringify(error));\n      });\n  }\n}\n\n\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-button slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"inside\\\"></ion-back-button>\\n    </ion-button>\\n    <div *ngFor=\\\"let reporte of reportes$ | async;  let i = index \\\">\\n      <ion-title *ngIf=\\\"i+1 == reporteId\\\">\\n        Reporte de las {{ reporte.hora[0] }}{{reporte.hora[1]}}:{{ reporte.hora[2] }}{{reporte.hora[3]}}\\n      </ion-title>\\n    </div>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content *ngIf=\\\"ionicForm\\\">\\n  <form [formGroup]=\\\"ionicForm\\\" (ngSubmit)=\\\"submitForm()\\\" novalidate>\\n\\n    <ion-row>\\n      <ion-col size=\\\"4\\\" class=\\\"\\\">\\n        <ion-text>\\n          Latitud:\\n        </ion-text>\\n      </ion-col>\\n      <ion-col>\\n        <ion-input type=\\\"text\\\" name=\\\"lat\\\" value=\\\"{{lat}}\\\" disabled></ion-input>\\n      </ion-col>\\n    </ion-row>\\n\\n     \\n    <ion-row>\\n      <ion-col size=\\\"4\\\" class=\\\"\\\">\\n        <ion-text>\\n          Longitud:\\n        </ion-text>\\n      </ion-col>\\n      <ion-col>\\n        <ion-input type=\\\"text\\\" name=\\\"lng\\\" value=\\\"{{lng}}\\\" disabled></ion-input>\\n      </ion-col>\\n    </ion-row>\\n    \\n    <ion-list>\\n      <ion-item-sliding *ngFor=\\\"let pregunta of preguntas$ | async;  let i = index \\\">\\n\\n        <ion-item *ngIf=\\\"i == '0'\\\">\\n          <ion-label class=\\\"ion-text-wrap\\\">{{pregunta.texto_pregunta}}</ion-label>\\n          <ion-input disabled slot=\\\"end\\\" formControlName=\\\"{{ pregunta.id }}\\\" disabled value=\\\"{{ username$ | async }}\\\">\\n          </ion-input>\\n        </ion-item>\\n\\n        <div *ngIf=\\\"i != '0'\\\">\\n\\n          <ion-item *ngIf=\\\"pregunta?.tipo_pregunta_id == '1'\\\">\\n            <ion-label class=\\\"ion-text-wrap\\\">Fecha/Hora:</ion-label>\\n            \\n            <ion-input name=\\\"hora\\\" [(value)]=\\\"currDate\\\"  formControlName=\\\"{{ pregunta.id }}\\\" slot=\\\"end\\\" disabled>\\n           \\n            </ion-input>\\n          </ion-item>\\n \\n            \\n          <ion-item *ngIf=\\\"pregunta?.tipo_pregunta_id == '2'\\\">\\n            <ion-label class=\\\"ion-text-wrap\\\">{{pregunta.texto_pregunta}}</ion-label>\\n            <ion-checkbox slot=\\\"end\\\" formControlName=\\\"{{ pregunta.id }}\\\"></ion-checkbox>\\n          </ion-item>\\n\\n          <ion-item *ngIf=\\\"pregunta?.tipo_pregunta_id == '3'\\\">\\n            <ion-label class=\\\"ion-text-wrap\\\">{{pregunta.texto_pregunta}}</ion-label>\\n            <ion-input type=\\\"number\\\" placeholder=\\\"Escriba numero\\\" slot=\\\"end\\\" formControlName=\\\"{{ pregunta.id }}\\\"></ion-input>\\n\\n          </ion-item>\\n\\n\\n          <ion-item *ngIf=\\\"pregunta?.tipo_pregunta_id == '4'\\\">\\n            <ion-label class=\\\"ion-text-wrap\\\">{{pregunta.texto_pregunta}}</ion-label>\\n            <ion-input type=\\\"text\\\" placeholder=\\\"Escriba su respuesta\\\" slot=\\\"end\\\" formControlName=\\\"{{ pregunta.id }}\\\">\\n            </ion-input>\\n          </ion-item>\\n        </div>\\n      </ion-item-sliding>\\n    </ion-list>\\n    <ion-button color=\\\"primary\\\" class=\\\"submit-btn\\\" expand=\\\"block\\\" type=\\\"submit\\\" disabled=\\\"{{ ionicForm.invalid }}\\\">Enviar</ion-button>\\n   </form>  \\n  \\n  </ion-content>\\n\";"]}